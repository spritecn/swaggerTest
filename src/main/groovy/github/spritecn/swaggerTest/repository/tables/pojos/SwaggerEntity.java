/*
 * This file is generated by jOOQ.
 */
package github.spritecn.swaggerTest.repository.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SwaggerEntity implements Serializable {

    private static final long serialVersionUID = 213954633;

    private Integer id;
    private String  sourceUrl;
    private String  name;
    private Integer invalid;
    private Integer lastUpdateTime;
    private Integer lastFetchTime;
    private Integer autoFetchInterval;
    private String  basePath;
    private String  host;
    private String  schemes;

    public SwaggerEntity() {}

    public SwaggerEntity(SwaggerEntity value) {
        this.id = value.id;
        this.sourceUrl = value.sourceUrl;
        this.name = value.name;
        this.invalid = value.invalid;
        this.lastUpdateTime = value.lastUpdateTime;
        this.lastFetchTime = value.lastFetchTime;
        this.autoFetchInterval = value.autoFetchInterval;
        this.basePath = value.basePath;
        this.host = value.host;
        this.schemes = value.schemes;
    }

    public SwaggerEntity(
        Integer id,
        String  sourceUrl,
        String  name,
        Integer invalid,
        Integer lastUpdateTime,
        Integer lastFetchTime,
        Integer autoFetchInterval,
        String  basePath,
        String  host,
        String  schemes
    ) {
        this.id = id;
        this.sourceUrl = sourceUrl;
        this.name = name;
        this.invalid = invalid;
        this.lastUpdateTime = lastUpdateTime;
        this.lastFetchTime = lastFetchTime;
        this.autoFetchInterval = autoFetchInterval;
        this.basePath = basePath;
        this.host = host;
        this.schemes = schemes;
    }

    public Integer getId() {
        return this.id;
    }

    public SwaggerEntity setId(Integer id) {
        this.id = id;
        return this;
    }

    public String getSourceUrl() {
        return this.sourceUrl;
    }

    public SwaggerEntity setSourceUrl(String sourceUrl) {
        this.sourceUrl = sourceUrl;
        return this;
    }

    public String getName() {
        return this.name;
    }

    public SwaggerEntity setName(String name) {
        this.name = name;
        return this;
    }

    public Integer getInvalid() {
        return this.invalid;
    }

    public SwaggerEntity setInvalid(Integer invalid) {
        this.invalid = invalid;
        return this;
    }

    public Integer getLastUpdateTime() {
        return this.lastUpdateTime;
    }

    public SwaggerEntity setLastUpdateTime(Integer lastUpdateTime) {
        this.lastUpdateTime = lastUpdateTime;
        return this;
    }

    public Integer getLastFetchTime() {
        return this.lastFetchTime;
    }

    public SwaggerEntity setLastFetchTime(Integer lastFetchTime) {
        this.lastFetchTime = lastFetchTime;
        return this;
    }

    public Integer getAutoFetchInterval() {
        return this.autoFetchInterval;
    }

    public SwaggerEntity setAutoFetchInterval(Integer autoFetchInterval) {
        this.autoFetchInterval = autoFetchInterval;
        return this;
    }

    public String getBasePath() {
        return this.basePath;
    }

    public SwaggerEntity setBasePath(String basePath) {
        this.basePath = basePath;
        return this;
    }

    public String getHost() {
        return this.host;
    }

    public SwaggerEntity setHost(String host) {
        this.host = host;
        return this;
    }

    public String getSchemes() {
        return this.schemes;
    }

    public SwaggerEntity setSchemes(String schemes) {
        this.schemes = schemes;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Swagger (");

        sb.append(id);
        sb.append(", ").append(sourceUrl);
        sb.append(", ").append(name);
        sb.append(", ").append(invalid);
        sb.append(", ").append(lastUpdateTime);
        sb.append(", ").append(lastFetchTime);
        sb.append(", ").append(autoFetchInterval);
        sb.append(", ").append(basePath);
        sb.append(", ").append(host);
        sb.append(", ").append(schemes);

        sb.append(")");
        return sb.toString();
    }
}
