/*
 * This file is generated by jOOQ.
 */
package github.spritecn.swaggerTest.repository.tables.records;


import github.spritecn.swaggerTest.repository.tables.Swagger;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SwaggerRecord extends UpdatableRecordImpl<SwaggerRecord> implements Record10<Integer, String, String, Integer, Integer, Integer, Integer, String, String, String> {

    private static final long serialVersionUID = 668691545;

    /**
     * Setter for <code>swagger.id</code>.
     */
    public SwaggerRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>swagger.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>swagger.source_url</code>.
     */
    public SwaggerRecord setSourceUrl(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>swagger.source_url</code>.
     */
    public String getSourceUrl() {
        return (String) get(1);
    }

    /**
     * Setter for <code>swagger.name</code>.
     */
    public SwaggerRecord setName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>swagger.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>swagger.invalid</code>.
     */
    public SwaggerRecord setInvalid(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>swagger.invalid</code>.
     */
    public Integer getInvalid() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>swagger.last_update_time</code>.
     */
    public SwaggerRecord setLastUpdateTime(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>swagger.last_update_time</code>.
     */
    public Integer getLastUpdateTime() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>swagger.last_fetch_time</code>.
     */
    public SwaggerRecord setLastFetchTime(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>swagger.last_fetch_time</code>.
     */
    public Integer getLastFetchTime() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>swagger.auto_fetch_interval</code>.
     */
    public SwaggerRecord setAutoFetchInterval(Integer value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>swagger.auto_fetch_interval</code>.
     */
    public Integer getAutoFetchInterval() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>swagger.base_path</code>.
     */
    public SwaggerRecord setBasePath(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>swagger.base_path</code>.
     */
    public String getBasePath() {
        return (String) get(7);
    }

    /**
     * Setter for <code>swagger.host</code>.
     */
    public SwaggerRecord setHost(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>swagger.host</code>.
     */
    public String getHost() {
        return (String) get(8);
    }

    /**
     * Setter for <code>swagger.schemes</code>.
     */
    public SwaggerRecord setSchemes(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>swagger.schemes</code>.
     */
    public String getSchemes() {
        return (String) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Integer, String, String, Integer, Integer, Integer, Integer, String, String, String> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Integer, String, String, Integer, Integer, Integer, Integer, String, String, String> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Swagger.SWAGGER.ID;
    }

    @Override
    public Field<String> field2() {
        return Swagger.SWAGGER.SOURCE_URL;
    }

    @Override
    public Field<String> field3() {
        return Swagger.SWAGGER.NAME;
    }

    @Override
    public Field<Integer> field4() {
        return Swagger.SWAGGER.INVALID;
    }

    @Override
    public Field<Integer> field5() {
        return Swagger.SWAGGER.LAST_UPDATE_TIME;
    }

    @Override
    public Field<Integer> field6() {
        return Swagger.SWAGGER.LAST_FETCH_TIME;
    }

    @Override
    public Field<Integer> field7() {
        return Swagger.SWAGGER.AUTO_FETCH_INTERVAL;
    }

    @Override
    public Field<String> field8() {
        return Swagger.SWAGGER.BASE_PATH;
    }

    @Override
    public Field<String> field9() {
        return Swagger.SWAGGER.HOST;
    }

    @Override
    public Field<String> field10() {
        return Swagger.SWAGGER.SCHEMES;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getSourceUrl();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public Integer component4() {
        return getInvalid();
    }

    @Override
    public Integer component5() {
        return getLastUpdateTime();
    }

    @Override
    public Integer component6() {
        return getLastFetchTime();
    }

    @Override
    public Integer component7() {
        return getAutoFetchInterval();
    }

    @Override
    public String component8() {
        return getBasePath();
    }

    @Override
    public String component9() {
        return getHost();
    }

    @Override
    public String component10() {
        return getSchemes();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getSourceUrl();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public Integer value4() {
        return getInvalid();
    }

    @Override
    public Integer value5() {
        return getLastUpdateTime();
    }

    @Override
    public Integer value6() {
        return getLastFetchTime();
    }

    @Override
    public Integer value7() {
        return getAutoFetchInterval();
    }

    @Override
    public String value8() {
        return getBasePath();
    }

    @Override
    public String value9() {
        return getHost();
    }

    @Override
    public String value10() {
        return getSchemes();
    }

    @Override
    public SwaggerRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public SwaggerRecord value2(String value) {
        setSourceUrl(value);
        return this;
    }

    @Override
    public SwaggerRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public SwaggerRecord value4(Integer value) {
        setInvalid(value);
        return this;
    }

    @Override
    public SwaggerRecord value5(Integer value) {
        setLastUpdateTime(value);
        return this;
    }

    @Override
    public SwaggerRecord value6(Integer value) {
        setLastFetchTime(value);
        return this;
    }

    @Override
    public SwaggerRecord value7(Integer value) {
        setAutoFetchInterval(value);
        return this;
    }

    @Override
    public SwaggerRecord value8(String value) {
        setBasePath(value);
        return this;
    }

    @Override
    public SwaggerRecord value9(String value) {
        setHost(value);
        return this;
    }

    @Override
    public SwaggerRecord value10(String value) {
        setSchemes(value);
        return this;
    }

    @Override
    public SwaggerRecord values(Integer value1, String value2, String value3, Integer value4, Integer value5, Integer value6, Integer value7, String value8, String value9, String value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SwaggerRecord
     */
    public SwaggerRecord() {
        super(Swagger.SWAGGER);
    }

    /**
     * Create a detached, initialised SwaggerRecord
     */
    public SwaggerRecord(Integer id, String sourceUrl, String name, Integer invalid, Integer lastUpdateTime, Integer lastFetchTime, Integer autoFetchInterval, String basePath, String host, String schemes) {
        super(Swagger.SWAGGER);

        set(0, id);
        set(1, sourceUrl);
        set(2, name);
        set(3, invalid);
        set(4, lastUpdateTime);
        set(5, lastFetchTime);
        set(6, autoFetchInterval);
        set(7, basePath);
        set(8, host);
        set(9, schemes);
    }
}
