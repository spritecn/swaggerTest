/*
 * This file is generated by jOOQ.
 */
package github.spritecn.swaggerTest.repository.tables.records;


import github.spritecn.swaggerTest.repository.tables.Request;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RequestRecord extends UpdatableRecordImpl<RequestRecord> implements Record8<Integer, Long, Integer, Long, Long, String, String, Integer> {

    private static final long serialVersionUID = 183480369;

    /**
     * Setter for <code>request.id</code>.
     */
    public RequestRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>request.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>request.last_update_time</code>.
     */
    public RequestRecord setLastUpdateTime(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>request.last_update_time</code>.
     */
    public Long getLastUpdateTime() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>request.task_id</code>.
     */
    public RequestRecord setTaskId(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>request.task_id</code>.
     */
    public Integer getTaskId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>request.start_time</code>.
     */
    public RequestRecord setStartTime(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>request.start_time</code>.
     */
    public Long getStartTime() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>request.end_time</code>.
     */
    public RequestRecord setEndTime(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>request.end_time</code>.
     */
    public Long getEndTime() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>request.request</code>.
     */
    public RequestRecord setRequest(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>request.request</code>.
     */
    public String getRequest() {
        return (String) get(5);
    }

    /**
     * Setter for <code>request.response</code>.
     */
    public RequestRecord setResponse(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>request.response</code>.
     */
    public String getResponse() {
        return (String) get(6);
    }

    /**
     * Setter for <code>request.status_code</code>.
     */
    public RequestRecord setStatusCode(Integer value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>request.status_code</code>.
     */
    public Integer getStatusCode() {
        return (Integer) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, Long, Integer, Long, Long, String, String, Integer> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, Long, Integer, Long, Long, String, String, Integer> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Request.REQUEST.ID;
    }

    @Override
    public Field<Long> field2() {
        return Request.REQUEST.LAST_UPDATE_TIME;
    }

    @Override
    public Field<Integer> field3() {
        return Request.REQUEST.TASK_ID;
    }

    @Override
    public Field<Long> field4() {
        return Request.REQUEST.START_TIME;
    }

    @Override
    public Field<Long> field5() {
        return Request.REQUEST.END_TIME;
    }

    @Override
    public Field<String> field6() {
        return Request.REQUEST.REQUEST_;
    }

    @Override
    public Field<String> field7() {
        return Request.REQUEST.RESPONSE;
    }

    @Override
    public Field<Integer> field8() {
        return Request.REQUEST.STATUS_CODE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getLastUpdateTime();
    }

    @Override
    public Integer component3() {
        return getTaskId();
    }

    @Override
    public Long component4() {
        return getStartTime();
    }

    @Override
    public Long component5() {
        return getEndTime();
    }

    @Override
    public String component6() {
        return getRequest();
    }

    @Override
    public String component7() {
        return getResponse();
    }

    @Override
    public Integer component8() {
        return getStatusCode();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getLastUpdateTime();
    }

    @Override
    public Integer value3() {
        return getTaskId();
    }

    @Override
    public Long value4() {
        return getStartTime();
    }

    @Override
    public Long value5() {
        return getEndTime();
    }

    @Override
    public String value6() {
        return getRequest();
    }

    @Override
    public String value7() {
        return getResponse();
    }

    @Override
    public Integer value8() {
        return getStatusCode();
    }

    @Override
    public RequestRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public RequestRecord value2(Long value) {
        setLastUpdateTime(value);
        return this;
    }

    @Override
    public RequestRecord value3(Integer value) {
        setTaskId(value);
        return this;
    }

    @Override
    public RequestRecord value4(Long value) {
        setStartTime(value);
        return this;
    }

    @Override
    public RequestRecord value5(Long value) {
        setEndTime(value);
        return this;
    }

    @Override
    public RequestRecord value6(String value) {
        setRequest(value);
        return this;
    }

    @Override
    public RequestRecord value7(String value) {
        setResponse(value);
        return this;
    }

    @Override
    public RequestRecord value8(Integer value) {
        setStatusCode(value);
        return this;
    }

    @Override
    public RequestRecord values(Integer value1, Long value2, Integer value3, Long value4, Long value5, String value6, String value7, Integer value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RequestRecord
     */
    public RequestRecord() {
        super(Request.REQUEST);
    }

    /**
     * Create a detached, initialised RequestRecord
     */
    public RequestRecord(Integer id, Long lastUpdateTime, Integer taskId, Long startTime, Long endTime, String request, String response, Integer statusCode) {
        super(Request.REQUEST);

        set(0, id);
        set(1, lastUpdateTime);
        set(2, taskId);
        set(3, startTime);
        set(4, endTime);
        set(5, request);
        set(6, response);
        set(7, statusCode);
    }
}
