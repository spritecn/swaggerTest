/*
 * This file is generated by jOOQ.
 */
package github.spritecn.swaggerTest.repository.tables.records;


import github.spritecn.swaggerTest.repository.tables.Config;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConfigRecord extends UpdatableRecordImpl<ConfigRecord> implements Record5<Integer, Long, Short, String, String> {

    private static final long serialVersionUID = 927161835;

    /**
     * Setter for <code>config.id</code>.
     */
    public ConfigRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>config.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>config.last_update_time</code>.
     */
    public ConfigRecord setLastUpdateTime(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>config.last_update_time</code>.
     */
    public Long getLastUpdateTime() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>config.type</code>.
     */
    public ConfigRecord setType(Short value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>config.type</code>.
     */
    public Short getType() {
        return (Short) get(2);
    }

    /**
     * Setter for <code>config.name</code>.
     */
    public ConfigRecord setName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>config.name</code>.
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>config.value</code>.
     */
    public ConfigRecord setValue(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>config.value</code>.
     */
    public String getValue() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Long, Short, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, Long, Short, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Config.CONFIG.ID;
    }

    @Override
    public Field<Long> field2() {
        return Config.CONFIG.LAST_UPDATE_TIME;
    }

    @Override
    public Field<Short> field3() {
        return Config.CONFIG.TYPE;
    }

    @Override
    public Field<String> field4() {
        return Config.CONFIG.NAME;
    }

    @Override
    public Field<String> field5() {
        return Config.CONFIG.VALUE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getLastUpdateTime();
    }

    @Override
    public Short component3() {
        return getType();
    }

    @Override
    public String component4() {
        return getName();
    }

    @Override
    public String component5() {
        return getValue();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getLastUpdateTime();
    }

    @Override
    public Short value3() {
        return getType();
    }

    @Override
    public String value4() {
        return getName();
    }

    @Override
    public String value5() {
        return getValue();
    }

    @Override
    public ConfigRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ConfigRecord value2(Long value) {
        setLastUpdateTime(value);
        return this;
    }

    @Override
    public ConfigRecord value3(Short value) {
        setType(value);
        return this;
    }

    @Override
    public ConfigRecord value4(String value) {
        setName(value);
        return this;
    }

    @Override
    public ConfigRecord value5(String value) {
        setValue(value);
        return this;
    }

    @Override
    public ConfigRecord values(Integer value1, Long value2, Short value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ConfigRecord
     */
    public ConfigRecord() {
        super(Config.CONFIG);
    }

    /**
     * Create a detached, initialised ConfigRecord
     */
    public ConfigRecord(Integer id, Long lastUpdateTime, Short type, String name, String value) {
        super(Config.CONFIG);

        set(0, id);
        set(1, lastUpdateTime);
        set(2, type);
        set(3, name);
        set(4, value);
    }
}
