/*
 * This file is generated by jOOQ.
 */
package github.spritecn.swaggerTest.repository.tables.records;


import github.spritecn.swaggerTest.repository.tables.TaskGroup;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskGroupRecord extends UpdatableRecordImpl<TaskGroupRecord> implements Record6<Integer, Long, String, String, Long, String> {

    private static final long serialVersionUID = -1898689879;

    /**
     * Setter for <code>task_group.id</code>.
     */
    public TaskGroupRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>task_group.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>task_group.last_update_time</code>.
     */
    public TaskGroupRecord setLastUpdateTime(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>task_group.last_update_time</code>.
     */
    public Long getLastUpdateTime() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>task_group.name</code>.
     */
    public TaskGroupRecord setName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>task_group.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>task_group.corn</code>.
     */
    public TaskGroupRecord setCorn(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>task_group.corn</code>.
     */
    public String getCorn() {
        return (String) get(3);
    }

    /**
     * Setter for <code>task_group.next_execute_time</code>.
     */
    public TaskGroupRecord setNextExecuteTime(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>task_group.next_execute_time</code>.
     */
    public Long getNextExecuteTime() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>task_group.report_json</code>.
     */
    public TaskGroupRecord setReportJson(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>task_group.report_json</code>.
     */
    public String getReportJson() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, Long, String, String, Long, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, Long, String, String, Long, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return TaskGroup.TASK_GROUP.ID;
    }

    @Override
    public Field<Long> field2() {
        return TaskGroup.TASK_GROUP.LAST_UPDATE_TIME;
    }

    @Override
    public Field<String> field3() {
        return TaskGroup.TASK_GROUP.NAME;
    }

    @Override
    public Field<String> field4() {
        return TaskGroup.TASK_GROUP.CORN;
    }

    @Override
    public Field<Long> field5() {
        return TaskGroup.TASK_GROUP.NEXT_EXECUTE_TIME;
    }

    @Override
    public Field<String> field6() {
        return TaskGroup.TASK_GROUP.REPORT_JSON;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getLastUpdateTime();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getCorn();
    }

    @Override
    public Long component5() {
        return getNextExecuteTime();
    }

    @Override
    public String component6() {
        return getReportJson();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getLastUpdateTime();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getCorn();
    }

    @Override
    public Long value5() {
        return getNextExecuteTime();
    }

    @Override
    public String value6() {
        return getReportJson();
    }

    @Override
    public TaskGroupRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public TaskGroupRecord value2(Long value) {
        setLastUpdateTime(value);
        return this;
    }

    @Override
    public TaskGroupRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public TaskGroupRecord value4(String value) {
        setCorn(value);
        return this;
    }

    @Override
    public TaskGroupRecord value5(Long value) {
        setNextExecuteTime(value);
        return this;
    }

    @Override
    public TaskGroupRecord value6(String value) {
        setReportJson(value);
        return this;
    }

    @Override
    public TaskGroupRecord values(Integer value1, Long value2, String value3, String value4, Long value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TaskGroupRecord
     */
    public TaskGroupRecord() {
        super(TaskGroup.TASK_GROUP);
    }

    /**
     * Create a detached, initialised TaskGroupRecord
     */
    public TaskGroupRecord(Integer id, Long lastUpdateTime, String name, String corn, Long nextExecuteTime, String reportJson) {
        super(TaskGroup.TASK_GROUP);

        set(0, id);
        set(1, lastUpdateTime);
        set(2, name);
        set(3, corn);
        set(4, nextExecuteTime);
        set(5, reportJson);
    }
}
