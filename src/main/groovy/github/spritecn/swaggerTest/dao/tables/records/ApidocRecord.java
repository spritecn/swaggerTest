/*
 * This file is generated by jOOQ.
 */
package github.spritecn.swaggerTest.dao.tables.records;


import github.spritecn.swaggerTest.dao.tables.Apidoc;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ApidocRecord extends UpdatableRecordImpl<ApidocRecord> implements Record11<Integer, String, String, Integer, Integer, Integer, Integer, Integer, String, String, String> {

    private static final long serialVersionUID = -1568503888;

    /**
     * Setter for <code>apiDoc.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>apiDoc.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>apiDoc.sourceUrl</code>.
     */
    public void setSourceurl(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>apiDoc.sourceUrl</code>.
     */
    public String getSourceurl() {
        return (String) get(1);
    }

    /**
     * Setter for <code>apiDoc.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>apiDoc.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>apiDoc.invalid</code>.
     */
    public void setInvalid(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>apiDoc.invalid</code>.
     */
    public Integer getInvalid() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>apiDoc.lastUpdateTime</code>.
     */
    public void setLastupdatetime(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>apiDoc.lastUpdateTime</code>.
     */
    public Integer getLastupdatetime() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>apiDoc.lastFetchTime</code>.
     */
    public void setLastfetchtime(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>apiDoc.lastFetchTime</code>.
     */
    public Integer getLastfetchtime() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>apiDoc.lastFetchFailed</code>.
     */
    public void setLastfetchfailed(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>apiDoc.lastFetchFailed</code>.
     */
    public Integer getLastfetchfailed() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>apiDoc.autoFetchInterval</code>.
     */
    public void setAutofetchinterval(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>apiDoc.autoFetchInterval</code>.
     */
    public Integer getAutofetchinterval() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>apiDoc.basePath</code>.
     */
    public void setBasepath(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>apiDoc.basePath</code>.
     */
    public String getBasepath() {
        return (String) get(8);
    }

    /**
     * Setter for <code>apiDoc.host</code>.
     */
    public void setHost(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>apiDoc.host</code>.
     */
    public String getHost() {
        return (String) get(9);
    }

    /**
     * Setter for <code>apiDoc.schemes</code>.
     */
    public void setSchemes(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>apiDoc.schemes</code>.
     */
    public String getSchemes() {
        return (String) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<Integer, String, String, Integer, Integer, Integer, Integer, Integer, String, String, String> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<Integer, String, String, Integer, Integer, Integer, Integer, Integer, String, String, String> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Apidoc.APIDOC.ID;
    }

    @Override
    public Field<String> field2() {
        return Apidoc.APIDOC.SOURCEURL;
    }

    @Override
    public Field<String> field3() {
        return Apidoc.APIDOC.NAME;
    }

    @Override
    public Field<Integer> field4() {
        return Apidoc.APIDOC.INVALID;
    }

    @Override
    public Field<Integer> field5() {
        return Apidoc.APIDOC.LASTUPDATETIME;
    }

    @Override
    public Field<Integer> field6() {
        return Apidoc.APIDOC.LASTFETCHTIME;
    }

    @Override
    public Field<Integer> field7() {
        return Apidoc.APIDOC.LASTFETCHFAILED;
    }

    @Override
    public Field<Integer> field8() {
        return Apidoc.APIDOC.AUTOFETCHINTERVAL;
    }

    @Override
    public Field<String> field9() {
        return Apidoc.APIDOC.BASEPATH;
    }

    @Override
    public Field<String> field10() {
        return Apidoc.APIDOC.HOST;
    }

    @Override
    public Field<String> field11() {
        return Apidoc.APIDOC.SCHEMES;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getSourceurl();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public Integer component4() {
        return getInvalid();
    }

    @Override
    public Integer component5() {
        return getLastupdatetime();
    }

    @Override
    public Integer component6() {
        return getLastfetchtime();
    }

    @Override
    public Integer component7() {
        return getLastfetchfailed();
    }

    @Override
    public Integer component8() {
        return getAutofetchinterval();
    }

    @Override
    public String component9() {
        return getBasepath();
    }

    @Override
    public String component10() {
        return getHost();
    }

    @Override
    public String component11() {
        return getSchemes();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getSourceurl();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public Integer value4() {
        return getInvalid();
    }

    @Override
    public Integer value5() {
        return getLastupdatetime();
    }

    @Override
    public Integer value6() {
        return getLastfetchtime();
    }

    @Override
    public Integer value7() {
        return getLastfetchfailed();
    }

    @Override
    public Integer value8() {
        return getAutofetchinterval();
    }

    @Override
    public String value9() {
        return getBasepath();
    }

    @Override
    public String value10() {
        return getHost();
    }

    @Override
    public String value11() {
        return getSchemes();
    }

    @Override
    public ApidocRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ApidocRecord value2(String value) {
        setSourceurl(value);
        return this;
    }

    @Override
    public ApidocRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public ApidocRecord value4(Integer value) {
        setInvalid(value);
        return this;
    }

    @Override
    public ApidocRecord value5(Integer value) {
        setLastupdatetime(value);
        return this;
    }

    @Override
    public ApidocRecord value6(Integer value) {
        setLastfetchtime(value);
        return this;
    }

    @Override
    public ApidocRecord value7(Integer value) {
        setLastfetchfailed(value);
        return this;
    }

    @Override
    public ApidocRecord value8(Integer value) {
        setAutofetchinterval(value);
        return this;
    }

    @Override
    public ApidocRecord value9(String value) {
        setBasepath(value);
        return this;
    }

    @Override
    public ApidocRecord value10(String value) {
        setHost(value);
        return this;
    }

    @Override
    public ApidocRecord value11(String value) {
        setSchemes(value);
        return this;
    }

    @Override
    public ApidocRecord values(Integer value1, String value2, String value3, Integer value4, Integer value5, Integer value6, Integer value7, Integer value8, String value9, String value10, String value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ApidocRecord
     */
    public ApidocRecord() {
        super(Apidoc.APIDOC);
    }

    /**
     * Create a detached, initialised ApidocRecord
     */
    public ApidocRecord(Integer id, String sourceurl, String name, Integer invalid, Integer lastupdatetime, Integer lastfetchtime, Integer lastfetchfailed, Integer autofetchinterval, String basepath, String host, String schemes) {
        super(Apidoc.APIDOC);

        set(0, id);
        set(1, sourceurl);
        set(2, name);
        set(3, invalid);
        set(4, lastupdatetime);
        set(5, lastfetchtime);
        set(6, lastfetchfailed);
        set(7, autofetchinterval);
        set(8, basepath);
        set(9, host);
        set(10, schemes);
    }
}
