buildscript {
    repositories {
        maven {
            url 'https://maven.aliyun.com/repository/public/'
        }
        maven {
            url 'https://maven.aliyun.com/repository/spring/'
        }
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath 'org.jooq:jooq-codegen:3.13.6'
        classpath 'org.xerial:sqlite-jdbc:3.25.2'
    }
}

plugins {
    id 'groovy'
}

group 'github.spritecn'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    maven {
        url 'https://maven.aliyun.com/repository/public/'
    }
    maven {
        url 'https://maven.aliyun.com/repository/spring/'
    }
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:3.0.6'
    compile 'com.sparkjava:spark-core:2.9.3'
    compile 'com.google.code.gson:gson:2.8.6'
    compile 'org.slf4j:slf4j-log4j12:1.7.25'
    compile 'com.squareup.okhttp3:okhttp:3.14.9'
    compile 'com.github.icecooly:FastHttpClient:1.7'
    compile 'io.swagger:swagger-parser:1.0.52'
    compile ('cn.hutool:hutool-setting:5.5.1') {
        exclude  group: 'cn.hutool', module: 'hutool-log'
    }
    compile 'org.jooq:jooq:3.13.6'
    compile("org.jooq:jooq-codegen:3.13.6")
    compile 'org.xerial:sqlite-jdbc:3.25.2'

    testCompile 'org.spockframework:spock-core:2.0-M4-groovy-3.0'
}



task jooqCodeGenerate {
// Use your favourite XML builder to construct the code generation configuration file
    def writer = new StringWriter()
    new groovy.xml.MarkupBuilder(writer)
            .configuration('xmlns': 'http://www.jooq.org/xsd/jooq-codegen-3.13.0.xsd') {
                jdbc() {
                    url('jdbc:sqlite:src/main/resources/data/main.db') // src/main/resources/database.db为数据库路径
                    //user() //不需要用户名，省略
                    //password() //不需要密码，省略
                }
                generator() {
                    database() {
                        includes('.*') //包括的数据表
                        excludes("sqlite_sequence") //排除的数据表
                        inputSchema() //默认数据库
                    }
                    target() {
                        packageName('github.spritecn.swaggerTest.dao') //计划用于存储生成结果的包名
                        directory('src/main/groovy') //将生成结果储存于src/main/java
                    }
                }
            }
    org.jooq.codegen.GenerationTool.generate(writer.toString())
}

